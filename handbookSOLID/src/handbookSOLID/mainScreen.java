/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package handbookSOLID;

import java.awt.BorderLayout;

/**
 *
 * @author ozben
 */
public class mainScreen extends javax.swing.JFrame {

    /**
     * Creates new form mainScreen
     */
    public mainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSingleResponsibility = new javax.swing.JLabel();
        lblOpenClosed = new javax.swing.JLabel();
        lblLiskovSubstitution = new javax.swing.JLabel();
        lblInterfaceSegregation = new javax.swing.JLabel();
        lblDependencyInversion = new javax.swing.JLabel();
        pnlMain = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblSingleResponsibility.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblSingleResponsibility.setText("S");
        lblSingleResponsibility.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSingleResponsibilityMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSingleResponsibilityMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSingleResponsibilityMouseExited(evt);
            }
        });

        lblOpenClosed.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblOpenClosed.setText("O");
        lblOpenClosed.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOpenClosedMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblOpenClosedMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblOpenClosedMouseExited(evt);
            }
        });

        lblLiskovSubstitution.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLiskovSubstitution.setText("L");
        lblLiskovSubstitution.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLiskovSubstitutionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLiskovSubstitutionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblLiskovSubstitutionMouseExited(evt);
            }
        });

        lblInterfaceSegregation.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblInterfaceSegregation.setText("I");
        lblInterfaceSegregation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblInterfaceSegregationMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblInterfaceSegregationMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblInterfaceSegregationMouseExited(evt);
            }
        });

        lblDependencyInversion.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblDependencyInversion.setText("D");
        lblDependencyInversion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDependencyInversionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDependencyInversionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDependencyInversionMouseExited(evt);
            }
        });

        pnlMain.setBackground(new java.awt.Color(102, 153, 255));
        pnlMain.setLayout(new java.awt.GridLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDependencyInversion)
                    .addComponent(lblInterfaceSegregation)
                    .addComponent(lblLiskovSubstitution)
                    .addComponent(lblOpenClosed)
                    .addComponent(lblSingleResponsibility))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSingleResponsibility)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOpenClosed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLiskovSubstitution)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInterfaceSegregation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDependencyInversion)
                        .addGap(0, 326, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSingleResponsibilityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSingleResponsibilityMouseEntered
        lblSingleResponsibility.setText("Single Responsibility");
    }//GEN-LAST:event_lblSingleResponsibilityMouseEntered

    private void lblSingleResponsibilityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSingleResponsibilityMouseExited
        lblSingleResponsibility.setText("S");
    }//GEN-LAST:event_lblSingleResponsibilityMouseExited

    private void lblOpenClosedMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenClosedMouseEntered
        lblOpenClosed.setText("Open/Closed");
    }//GEN-LAST:event_lblOpenClosedMouseEntered

    private void lblOpenClosedMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenClosedMouseExited
        lblOpenClosed.setText("O");
    }//GEN-LAST:event_lblOpenClosedMouseExited

    private void lblLiskovSubstitutionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLiskovSubstitutionMouseEntered
        lblLiskovSubstitution.setText("Liskov Substitution");
    }//GEN-LAST:event_lblLiskovSubstitutionMouseEntered

    private void lblLiskovSubstitutionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLiskovSubstitutionMouseExited
        lblLiskovSubstitution.setText("L");
    }//GEN-LAST:event_lblLiskovSubstitutionMouseExited

    private void lblInterfaceSegregationMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInterfaceSegregationMouseEntered
        lblInterfaceSegregation.setText("Interface Segregation");
    }//GEN-LAST:event_lblInterfaceSegregationMouseEntered

    private void lblInterfaceSegregationMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInterfaceSegregationMouseExited
        lblInterfaceSegregation.setText("I");
    }//GEN-LAST:event_lblInterfaceSegregationMouseExited

    private void lblDependencyInversionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDependencyInversionMouseEntered
        lblDependencyInversion.setText("Dependency Inversion");
    }//GEN-LAST:event_lblDependencyInversionMouseEntered

    private void lblDependencyInversionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDependencyInversionMouseExited
        lblDependencyInversion.setText("D");
    }//GEN-LAST:event_lblDependencyInversionMouseExited

    private void lblSingleResponsibilityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSingleResponsibilityMouseClicked
        pnlMain.removeAll();
        pnlMain.repaint();
        pnlMain.revalidate();

        pnlMain.add(new pnlSingleResponsibility());
        pnlMain.repaint();
        pnlMain.revalidate();
    }//GEN-LAST:event_lblSingleResponsibilityMouseClicked

    private void lblOpenClosedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenClosedMouseClicked
        pnlMain.removeAll();
        pnlMain.repaint();
        pnlMain.revalidate();

        pnlMain.add(new pnlOpenClosed());
        pnlMain.repaint();
        pnlMain.revalidate();
    }//GEN-LAST:event_lblOpenClosedMouseClicked

    private void lblLiskovSubstitutionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLiskovSubstitutionMouseClicked
        pnlMain.removeAll();
        pnlMain.repaint();
        pnlMain.revalidate();

        pnlMain.add(new pnlLiskovSubstitution());
        pnlMain.repaint();
        pnlMain.revalidate();
    }//GEN-LAST:event_lblLiskovSubstitutionMouseClicked

    private void lblInterfaceSegregationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblInterfaceSegregationMouseClicked
        pnlMain.removeAll();
        pnlMain.repaint();
        pnlMain.revalidate();

        pnlMain.add(new pnlInterfaceSegregation());
        pnlMain.repaint();
        pnlMain.revalidate();
    }//GEN-LAST:event_lblInterfaceSegregationMouseClicked

    private void lblDependencyInversionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDependencyInversionMouseClicked
        pnlMain.removeAll();
        pnlMain.repaint();
        pnlMain.revalidate();

        pnlMain.add(new pnlDependencyInversion());
        pnlMain.repaint();
        pnlMain.revalidate();
    }//GEN-LAST:event_lblDependencyInversionMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainScreen().setVisible(true);
                /*  Single Responsibility
                    Open/Closed
                    Liskov Substitution
                    Interface Segregation
                    Dependency Inversion*/
                
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDependencyInversion;
    private javax.swing.JLabel lblInterfaceSegregation;
    private javax.swing.JLabel lblLiskovSubstitution;
    private javax.swing.JLabel lblOpenClosed;
    private javax.swing.JLabel lblSingleResponsibility;
    private javax.swing.JPanel pnlMain;
    // End of variables declaration//GEN-END:variables
}
